{"version":3,"sources":["pages/login/index.jsx"],"names":["Login","props","toLogin","value","a","username","password","reqLogin","res","status","token","userid","localStorage","setItem","receiveUser","success","history","goBack","warning","msg","state","className","labelCol","span","wrapperCol","name","initialValues","remember","onFinish","this","Item","label","rules","required","message","max","min","Password","type","htmlType","Component","connect"],"mappings":"mVAOMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,QANmB,uCAMT,WAAOC,GAAP,uBAAAC,EAAA,6DACAC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SADV,SAEUC,YAASF,EAAUC,GAF7B,OAGW,OADbE,EAFE,QAGAC,QACEC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACfC,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,SAAUF,GAC/B,EAAKV,MAAMa,YAAYH,GACvB,IAAQI,QAAQ,6BAChB,EAAKd,MAAMe,QAAQC,UAEnB,IAAQC,QAAQV,EAAIW,KAXd,2CANS,sDAEjB,EAAKC,MAAQ,GAFI,E,0CAqBnB,WAOE,OACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,aAAf,SACE,8CATS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAOhB,IAEEE,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAAUC,KAAK3B,QAJjB,UAOE,kBAAM4B,KAAN,CACEC,MAAM,sBACNN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,wBAGF,kBAAMJ,KAAN,CACEC,MAAM,eACNN,KAAK,WACLO,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+BAC3B,CAAEC,IAAK,GAAID,QAAS,oCACpB,CAAEE,IAAK,EAAGF,QAAS,oCANvB,SASE,kBAAOG,SAAP,MAEF,kBAAMP,KAAN,CAAWT,UAAU,aAAaG,WAAY,CAAED,KAAM,IAAtD,SACE,mBAAQe,KAAK,UAAUC,SAAS,SAAhC,kC,GA3DMC,aAsELC,uBAAQ,SAAArB,GAAK,MAAK,CAAET,OAAQS,KAAU,CAAEN,iBAAxC2B,CAAuDzC","file":"static/js/6.ba0590f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { reqLogin } from '@/api'\r\nimport './index.less'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { receiveUser } from '@/redux/actions'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  toLogin = async (value) => {\r\n    const { username, password } = value\r\n    const res = await reqLogin(username, password)\r\n    if (res.status === 200) {\r\n      const { token, userid } = res\r\n      localStorage.setItem(\"token\", token)\r\n      localStorage.setItem(\"userid\", userid)\r\n      this.props.receiveUser(userid)\r\n      message.success(\"登录成功!\")\r\n      this.props.history.goBack()\r\n    }else {\r\n      message.warning(res.msg)\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const layout = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    \r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login_main\">\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={this.toLogin}\r\n          // onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"用户名:\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"密码\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: 'Please input your password!' },\r\n                { max: 18, message: '密码最长18位' },\r\n                { min: 6, message: '密码最短6位' },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item className=\"submit_btn\" wrapperCol={{ span: 20 }} >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n        </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ userid: state }), { receiveUser })(Login)"],"sourceRoot":""}